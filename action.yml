name: Cargo Release builder, packager, publisher
description: All-in-one action to build, optimise, tag, sign, and publish a Cargo-based Rust project.
branding:
  icon: 'umbrella'
  color: 'orange'
runs:
  using: node16
  main: dist/index.js

inputs:
  # credentials
  github-token:
    description: A github token to interact with the API and to use for OIDC.
    required: true
  crates-token:
    description: A crates.io token with publish scope for the crates.

  # setup
  toolchain:
    description: The rust toolchain to use.
    default: nightly
  target:
    description: The target to install and build for.
  binstall-version:
    description: Specify the cargo-binstall version to use.
  cosign-version:
    description: Specify the cosign version to use.
  cross-version:
    description: Specify the cross version to use.

  # compilation
  crates:
    description: Newline-separated pattern list of crates to build within the workspace.
  features:
    description: Newline-separated features to enable when building.
  buildstd:
    description: Set to `false` to disable building the standard library from source.
  debuginfo:
    description: Set to `false` to disable generating and outputting split debuginfo.
  musl-libgcc:
    description: Set to `false` to disable static-linking libgcc for musl builds.
    default: 'true'
  use-cross:
    description: Force use/non-use of cross to compile.

  # extra flags
  extra-rustup-components:
    description: Extra components to install with rustup.
  extra-cargo-flags:
    description: Extra flags to pass to cargo build.
  extra-rustc-flags:
    description: Extra flags to pass to rustc (RUSTFLAGS).
  extra-cosign-flags:
    description: Extra flags to pass to cosign.

  # packaging
  package-archive:
    description: Packaging archive format.
    default: zip
  package-files:
    description: Newline-separated pattern list of files to include in the package in addition to compiled binaries.
  package-name:
    description: Name of the package, excluding the extension.
  package-in-dir:
    description: Wrap the package contents in a directory with the same name before archiving.
    default: 'true'
  package-separately:
    description: Package each crate separately.
    default: 'false'
  package-short-ext:
    description: Use the short variant of the archive extension, if relevant for the format.
    default: 'false'
  package-output:
    description: Path to write finished packages to.
    default: packages/
  package-sign:
    description: Set to `false` to disable signing packages.
    default: 'true'

  # crate publishing
  publish-crate:
    description: Set to `false` to disable publishing to crates.io.
    default: 'true'
  publish-crate-only:
    description:
    default: 'false'
  publish-all-crates:
    description:
    default: 'false'

  # tagging
  tag:
    description: Tag to create or use for the release.
  tag-crates:
    description: Set to `false` to disable tagging crate publishes.
    default: 'true'
  tag-sign:
    description: Set to `false` to disable signing tags
    default: 'true'

  # release
  release:
    description: Set to `false` to disable publishing a GitHub release.
    default: 'true'
  release-notes:
    description: Body of the github release.
  release-name:
    description: Name of the github release.
  release-separately:
    description: Create a release for each crate.
    default: 'false'
  release-latest:
    description: Set to `false` to not mark the release as the latest.
  release-pre:
    description: Set to `true` to mark the release as a pre-release.
    default: 'false'

  # hooks
  post-setup:
    description: Script to run after toolchain setup.
  post-publish:
    description: Script to run after publishing to registry.
  custom-build:
    description: Completely custom build script.
  post-build:
    description: Script to run after building.
  pre-package:
    description: Script to run immediately before packaging.
  post-package:
    description: Script to run after packaging.
  post-sign:
    description: Script to run after signing.
  post-release:
    description: Script to run after releasing to Github.
  hooks-shell:
    description: Shell to use for all hooks.
    default: bash

outputs:
  files:
    description: Newline-separated list of files generated by the action.
